@page
@model POS.Pages.IndexModel

@{
    ViewData["Title"] = "POS - Coffee Shop";
}

<div class="container-fluid mt-4">
    <div class="row">
        <!-- struk di kiri -->
        <div class="col-md-4 bg-light p-3 rounded shadow-sm">
            <h4 class="text-center mb-3"> Struk Pembelian</h4>
            <div id="clock" class="text-center fw-bold mb-3"></div>

            <table class="table table-bordered text-center align-middle">
                <thead class="table-secondary">
                    <tr>
                        <th>Nama</th>
                        <th>Qty</th>
                        <th>Harga</th>
                    </tr>
                </thead>
                <tbody id="cartBody"></tbody>
            </table>

            <div class="mt-3">
                <h6 class="text-end">Subtotal: Rp <span id="subtotal">0</span></h6>
                <h6 class="text-end">PPN (10%): Rp <span id="taxAmount">0</span></h6>
                <h5 class="text-end fw-bold mt-2">Total Bayar: Rp <span id="totalAmount">0</span></h5>
            </div>

            <div class="d-grid mt-3">
                <button class="btn btn-success" onclick="saveTransaction()">Simpan Transaksi</button>
            </div>
        </div>

        <!--  bagian kanan -->
        <div class="col-md-8">
            <h4 class="mb-3 text-center"> Daftar Produk</h4>
            <div class="row overflow-auto" style="max-height: 75vh;">
                @foreach (var item in Model.Products)
                {
                    <div class="col-md-3 mb-4">
                        <div class="card shadow-sm border-0">
                            <img src="@item.ImageUrl" class="card-img-top" alt="@item.Name" style="height:150px; object-fit:cover;">
                            <div class="card-body text-center">
                                <h6>@item.Name</h6>
                                <p class="text-muted">Rp @item.Price.ToString("N0")</p>
                                <button class="btn btn-primary btn-sm" onclick="addToCart('@item.Name', @item.Price)">Tambah</button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- script kasir -->
<script>
    let total = 0;
    let cart = [];

    function addToCart(name, price) {
        const existing = cart.find(p => p.name === name);
        if (existing) {
            existing.qty++;
        } else {
            cart.push({ name, price, qty: 1 });
        }
        updateCart();
    }

    function decreaseQty(index) {
        if (cart[index].qty > 1) {
            cart[index].qty--;
        } else {
            cart.splice(index, 1);
        }
        updateCart();
    }

    function updateCart() {
        const cartBody = document.getElementById("cartBody");
        cartBody.innerHTML = "";
        total = 0;

        cart.forEach((item, index) => {
            total += item.price * item.qty;
            const row = `
                <tr>
                    <td>${item.name}</td>
                    <td>
                        <button class="btn btn-sm btn-danger me-1" onclick="decreaseQty(${index})">-</button>
                        ${item.qty}
                        <button class="btn btn-sm btn-success ms-1" onclick="addToCart('${item.name}', ${item.price})">+</button>
                    </td>
                    <td>Rp ${(item.price * item.qty).toLocaleString()}</td>
                </tr>`;
            cartBody.innerHTML += row;
        });

        const tax = total * 0.1;
        const grandTotal = total + tax;

        document.getElementById("subtotal").textContent = total.toLocaleString();
        document.getElementById("taxAmount").textContent = tax.toLocaleString();
        document.getElementById("totalAmount").textContent = grandTotal.toLocaleString();
    }

    function saveTransaction() {
        const time = new Date().toLocaleTimeString();
        alert("Transaksi disimpan pada " + time);
        cart = [];
        updateCart();
    }

    function updateClock() {
        const now = new Date();
        document.getElementById("clock").textContent = now.toLocaleTimeString();
    }

    setInterval(updateClock, 1000);
    updateClock();
</script>
